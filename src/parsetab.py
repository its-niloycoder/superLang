
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COLON EQUALS FUNC_CALL IDENTIFIER LPAREN NUMBER RPAREN SEMICOLON TYPEprogram : declaration statementdeclaration : TYPE COLON NUMBER IDENTIFIER EQUALS NUMBER SEMICOLONstatement : FUNC_CALL LPAREN FUNC_CALL LPAREN IDENTIFIER RPAREN RPAREN SEMICOLON'
    
_lr_action_items = {'TYPE':([0,],[3,]),'$end':([1,4,18,],[0,-1,-3,]),'FUNC_CALL':([2,7,16,],[5,9,-2,]),'COLON':([3,],[6,]),'LPAREN':([5,9,],[7,11,]),'NUMBER':([6,12,],[8,14,]),'IDENTIFIER':([8,11,],[10,13,]),'EQUALS':([10,],[12,]),'RPAREN':([13,15,],[15,17,]),'SEMICOLON':([14,17,],[16,18,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declaration':([0,],[2,]),'statement':([2,],[4,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declaration statement','program',2,'p_program','superLang.py',47),
  ('declaration -> TYPE COLON NUMBER IDENTIFIER EQUALS NUMBER SEMICOLON','declaration',7,'p_declaration','superLang.py',52),
  ('statement -> FUNC_CALL LPAREN FUNC_CALL LPAREN IDENTIFIER RPAREN RPAREN SEMICOLON','statement',8,'p_statement','superLang.py',67),
]
